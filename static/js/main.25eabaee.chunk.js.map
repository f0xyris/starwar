{"version":3,"sources":["components/header/index.js","components/header/header.js","components/pages/favorite-page.js","components/starwar-service-context/starwar-service-context.js","components/hoc/with-starwar-service.js","utils/compose.js","components/active-list-item/index.js","components/active-list-item/active-list-item.js","actions/index.js","components/active-list/active-list.js","components/active-list/index.js","components/films-list-item/index.js","components/films-list-item/films-lits-item.js","components/spinner/index.js","components/spinner/spinner.js","components/films-list/films-list.js","components/films-list/index.js","components/species-list-item/index.js","components/species-list-item/species-list-item.js","components/species-list/species-list.js","components/species-list/index.js","components/starships-list-item/index.js","components/starships-list-item/starships-list-item.js","components/starships-list/starships-list.js","components/starships-list/index.js","components/active-item/index.js","components/active-item/active-item.js","components/pages/herodetails-page.js","components/people-list-item/index.js","components/people-list-item/people-list-item.js","components/people-list/people-list.js","components/people-list/index.js","components/filter-item/filter-item.js","components/filter-item/index.js","components/pages/people-page.js","images/starwar-bg.jpg","components/app/index.js","components/app/app.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/index.js","store.js","index.js","services/starwar-service.js"],"names":["Header","className","to","FavoritePage","favItems","this","props","favoriteItems","map","item","gender","aria-hidden","name","id","Component","connect","React","createContext","StarwarServiceProvider","Provider","StarwarServiceConsumer","Consumer","withStarwarService","Wrapped","starwarService","compose","funcs","comp","reduceRight","wrapped","f","ActiveListItem","value","idx","fetchPeople","dispatch","type","getAllPeopleData","then","data","payload","catch","err","fetchFilms","getAllFilmsData","fetchStarships","getAllStarshipsData","fetchSpecies","getAllSpeciesData","ActiveList","selectedItem","onAddToFavorite","onRemoveFromFavorite","height","mass","hair_color","skin_color","eye_color","birth_year","favItemIndex","findIndex","newItems","peopleItems","Object","entries","charAt","toUpperCase","slice","split","join","onClick","FilmsListItem","title","Spinner","FilmList","filmsItem","loading","SpaciesListItem","SpeciesList","speciesItem","StarshipsListItem","model","StarshipsList","starshipsItem","ActiveItem","itemId","HerodetailsPage","match","role","url","path","render","params","PeopleListItem","PeopleList","onItemSelected","filteredProducts","onIncreaseCount","PeopleListContainer","FilterItem","onInputChange","onChange","e","target","placeholder","PeoplePage","App","src","starwarBg","alt","component","HeroDetails","ErrorIndicator","ErrorBoundry","state","hasError","setState","children","initialState","people","error","filmsItemId","starshipsItemId","speciesItemId","allPeople","peopleCount","reducer","action","console","log","slicedPeople","allFilms","selectedFilms","itemIdx","allStarships","selectedStarships","filter","indexOf","allSpecies","selectedSpecies","find","films","starships","species","idRegExp","searchValue","newState","assign","filteredValue","toLowerCase","includes","newPeopleCount","addItemIndex","removeItemIndex","store","createStore","serialisedState","localStorage","getItem","JSON","parse","warn","loadFromLocalStorage","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveToLocalStorage","getState","_apiBase","_extractId","_transformPerson","_transformStarship","starship","getResource","urls","a","results","fetch","res","json","next","push","getAllPeople","Promise","resolve","getAllFilms","getAllStarships","getAllSpecies","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.25eabaee.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header container-fluid\">\r\n      <div className=\"container d-flex align-items-center header-wrapper\">\r\n        <h4 className=\"header-logo flex-grow-1\">\r\n          <Link to=\"/starwar\">\r\n            Star Wars\r\n          </Link>\r\n        </h4>\r\n        <ul className=\"d-flex header-nav\">\r\n          <li>\r\n          <Link to=\"/favorites\">Favorite</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/peoples\">People</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass FavoritePage extends Component {\r\n    render() {\r\n        const {favoriteItems} = this.props;;\r\n        \r\n        const favItems = favoriteItems.map((item) => {\r\n            return (\r\n                <li key={item.id} className=\"list-group-item\">\r\n                    <i className={`fa fa-${item.gender} fa-cog`} aria-hidden=\"true\"></i>\r\n                    <span className=\"people-list-item_name\" >{item.name}</span>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"container-fluid flex-grow-1 page favorite-page\">\r\n                <div className=\"container default-page\">\r\n                    <ul className=\"people-list list-group\">\r\n                        {favItems}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({favoriteItems}) => {\r\n    return {\r\n        favoriteItems\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FavoritePage);\r\n","import React from 'react';\r\n\r\nconst {\r\n  Provider: StarwarServiceProvider,\r\n  Consumer: StarwarServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    StarwarServiceProvider,\r\n    StarwarServiceConsumer\r\n};\r\n","import React from 'react';\r\nimport { StarwarServiceConsumer } from '../starwar-service-context';\r\n\r\nconst withStarwarService = () => (Wrapped) => {\r\n\r\n  return (props) => {\r\n    return (\r\n      <StarwarServiceConsumer>\r\n        {\r\n          (starwarService) => {\r\n            return (<Wrapped {...props}\r\n                     starwarService={starwarService}/>);\r\n          }\r\n        }\r\n      </StarwarServiceConsumer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStarwarService;\r\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import ActiveListItem from './active-list-item';\r\n\r\nexport default ActiveListItem;","import React from 'react'\r\n\r\nconst ActiveListItem = ({item, value,idx}) => {\r\n    return ( \r\n        <li key = {idx} className=\"list-group-item\">{item}<span>{value}</span></li>\r\n    );\r\n}\r\n \r\nexport default ActiveListItem;"," \r\n\r\nconst fetchData = () => {\r\n  return {\r\n    type: 'FETCH_PEOPLE_REQUEST'\r\n  }\r\n}\r\n\r\nconst peopleLoaded = (newPeople) => {\r\n  return {\r\n    type: 'FETCH_PEOPLE_SUCCESS',\r\n    payload: newPeople\r\n  };\r\n};\r\n\r\nconst peopleError = (error) => {\r\n  return {\r\n    type: 'FETCH_PEOPLE_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst filmsLoaded = (newFilms) => {\r\n  return {\r\n    type: 'FETCH_FILMS_SUCCESS',\r\n    payload: newFilms\r\n  };\r\n};\r\n\r\nconst filmsError = (error) => {\r\n  return {\r\n    type: 'FETCH_FILMS_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst starshipsLoaded = (newStarships) => {\r\n  return {\r\n    type: 'FETCH_STARSHIPS_SUCCESS',\r\n    payload: newStarships\r\n  };\r\n};\r\n\r\nconst starshipsError = (error) => {\r\n  return {\r\n    type: 'FETCH_STARSHIPS_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst speciesLoaded = (newSpecies) => {\r\n  return {\r\n    type: 'FETCH_SPECIES_SUCCESS',\r\n    payload: newSpecies\r\n  };\r\n};\r\n\r\nconst speciesError = (error) => {\r\n  return {\r\n    type: 'FETCH_SPECIES_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nconst onItemSelected = (itemId) => {\r\n  return {\r\n    type: 'ON_ITEM_SELECTED',\r\n    payload: itemId\r\n\r\n  }\r\n};\r\n\r\nconst onInputChange = (value) => {\r\n  return {\r\n    type: 'ON_INPUT_CHANGE',\r\n    payload: value\r\n  }\r\n}\r\n\r\nconst onIncreaseCount = () => {\r\n  return {\r\n    type: 'ON_INCREASE_COUNT'\r\n  }\r\n}\r\n\r\nconst onAddToFavorite = () => {\r\n  return {\r\n    type: 'ON_ADD_TO_FAVORITE'\r\n  }\r\n}\r\n\r\nconst onRemoveFromFavorite = () => {\r\n  return {\r\n    type: 'ON_REMOVE_FROM_FAVORITE'\r\n  }\r\n}\r\n\r\nconst fetchPeople = (starwarService, dispatch) => () => {\r\n  dispatch(fetchData());\r\n  starwarService.getAllPeopleData()\r\n  .then((data) => dispatch(peopleLoaded(data)))\r\n  .catch((err) => dispatch(peopleError(err)))\r\n};\r\n\r\nconst fetchFilms = (starwarService, dispatch) => () => {\r\n  dispatch(fetchData());\r\n  starwarService.getAllFilmsData()\r\n    .then((data) => dispatch(filmsLoaded(data)))\r\n    .catch((err) => dispatch(filmsError(err)));\r\n};\r\n\r\nconst fetchStarships = (starwarService, dispatch) => () => {\r\n  dispatch(fetchData());\r\n  starwarService.getAllStarshipsData()\r\n    .then((data) => dispatch(starshipsLoaded(data)))\r\n    .catch((err) => dispatch(starshipsError(err)));\r\n};\r\n\r\nconst fetchSpecies = (starwarService, dispatch) => () => {\r\n  dispatch(fetchData());\r\n  starwarService.getAllSpeciesData()\r\n    .then((data) => dispatch(speciesLoaded(data)))\r\n    .catch((err) => dispatch(speciesError(err)));\r\n};\r\n\r\nexport {\r\n  fetchPeople,\r\n  onItemSelected,\r\n  fetchFilms,\r\n  fetchStarships,\r\n  fetchSpecies,\r\n  onInputChange,\r\n  onIncreaseCount,\r\n  onAddToFavorite,\r\n  onRemoveFromFavorite\r\n}","import React, { Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { withStarwarService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport ActiveListItem from '../active-list-item';\r\nimport {onAddToFavorite, onRemoveFromFavorite} from '../../actions';\r\n\r\nclass ActiveList extends Component {\r\n\r\n    render() {\r\n        \r\n        const {selectedItem, onAddToFavorite, favoriteItems, onRemoveFromFavorite} = this.props;\r\n        const {name, height, mass, hair_color, skin_color, eye_color, birth_year, gender} = selectedItem;\r\n\r\n        const favItemIndex = favoriteItems.findIndex(({id}) => id === selectedItem.id);\r\n        const newItems = {\r\n            height,\r\n            mass,\r\n            hair_color,\r\n            skin_color,\r\n            eye_color,\r\n            birth_year,\r\n            gender\r\n        };\r\n        const peopleItems = Object.entries(newItems).map(([item, value, idx]) => {\r\n            item = item.charAt(0).toUpperCase() + item.slice(1);\r\n            item = item.split('_').join(' ');\r\n    \r\n            if(value === \"n/a\" || value === \"unknown\") {\r\n                value = \"-\"\r\n            }\r\n    \r\n            return ( \r\n                <ActiveListItem \r\n                    item = {item}\r\n                    value = {value}\r\n                    idx = {idx}\r\n                />\r\n            )\r\n        });\r\n\r\n        return (\r\n            <>  \r\n                <div className=\"d-flex flex-grow-1 justify-content-between\">\r\n                     <h3 className=\"active-item__name\">{name}</h3>\r\n                    {\r\n                        favItemIndex < 0\r\n                        ? <button onClick = {() => onAddToFavorite()} className=\"btn btn-secondary\">Add to favorite</button> \r\n                        : <button onClick = {() => onRemoveFromFavorite()} className=\"btn btn-danger\">Remove item from favorite</button>\r\n                    }\r\n                </div>\r\n               \r\n                <ul className=\"list-group\">\r\n                    {peopleItems}\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({selectedItem, favoriteItems}) => {\r\n    return {\r\n        selectedItem,\r\n        favoriteItems\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddToFavorite: () => dispatch(onAddToFavorite()),\r\n        onRemoveFromFavorite: () => dispatch(onRemoveFromFavorite())\r\n    }\r\n}\r\n\r\nexport default compose(withStarwarService(),connect(mapStateToProps, mapDispatchToProps))(ActiveList);","import ActiveList from './active-list';\r\n\r\nexport default ActiveList;","import FilmsListItem from './films-lits-item';\r\n\r\nexport default FilmsListItem;","import React from 'react'\r\n\r\nconst FilmListItem = ({item, idx}) => {\r\n    return ( \r\n      <li key={idx} className=\"list-group-item\" >{item.title}</li>\r\n    );\r\n}\r\n \r\nexport default FilmListItem;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react'\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"atom-spinner\">\r\n                <div className=\"spinner-inner\">\r\n                    <div className=\"spinner-line\"></div>\r\n                    <div className=\"spinner-line\"></div>\r\n                    <div className=\"spinner-line\"></div>\r\n                    <div className=\"spinner-circle\">\r\n                    &#9679;\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        \r\n     );\r\n}\r\n \r\nexport default Spinner;","import React, { Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { fetchFilms } from '../../actions';\r\nimport { withStarwarService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport FilmsListItem from '../films-list-item';\r\n\r\nimport Spinner from '../spinner';\r\n\r\nclass FilmList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchFilms();\r\n    }\r\n\r\n    render() {\r\n        const {filmsItem, loading} = this.props;\r\n        if(loading) {\r\n            return (\r\n                <Spinner />\r\n            )\r\n        } else {\r\n            return (\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        filmsItem.map((item, idx) => {\r\n                            return (\r\n                                <FilmsListItem \r\n                                    item = {item}\r\n                                    idx = {idx}\r\n                                />\r\n                            )\r\n                            \r\n                        })\r\n                    }\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({filmsItem, loading}) => {\r\n    return {\r\n        filmsItem,\r\n        loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ((dispatch, {starwarService}) => {\r\n    return {\r\n        fetchFilms: fetchFilms(starwarService, dispatch)\r\n    }\r\n})\r\n\r\nexport default compose(withStarwarService(),connect(mapStateToProps, mapDispatchToProps))(FilmList);","import FilmList from './films-list';\r\n\r\nexport default FilmList;","import SpaciesListItem from  './species-list-item';\r\n\r\nexport default SpaciesListItem;","import React from 'react'\r\n\r\nconst SpeciesListItem = ({item, idx}) => {\r\n    return ( \r\n        <li key={idx} className=\"list-group-item\">{item.name}</li>\r\n    );\r\n}\r\n \r\nexport default SpeciesListItem;","import React, { Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { fetchSpecies } from '../../actions';\r\nimport { withStarwarService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport SpeciesListItem from '../species-list-item';\r\nimport Spinner from '../spinner';\r\n\r\nclass SpeciesList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchSpecies();\r\n    }\r\n\r\n    render() {\r\n        const {speciesItem, loading} = this.props;\r\n        if(loading) {\r\n            return (\r\n                <Spinner />\r\n            )\r\n        } else {\r\n            return (\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        speciesItem.map((item, idx) => {\r\n                            return (\r\n                                <SpeciesListItem \r\n                                    item = {item}\r\n                                    idx = {idx}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({speciesItem, loading}) => {\r\n    return {\r\n        speciesItem,\r\n        loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ((dispatch, {starwarService}) => {\r\n    return {\r\n        fetchSpecies: fetchSpecies(starwarService, dispatch)\r\n    }\r\n})\r\n\r\nexport default compose(withStarwarService(),connect(mapStateToProps, mapDispatchToProps))(SpeciesList);","import SpeciesList from './species-list';\r\n\r\nexport default SpeciesList;","import StarshipsListItem from './starships-list-item';\r\n\r\nexport default StarshipsListItem;","import React from 'react'\r\n\r\nconst StarshipsListItem = ({item, idx}) => {\r\n    return ( \r\n        <li key={idx} className=\"list-group-item\">{item.model}</li>\r\n    );\r\n}\r\n \r\nexport default StarshipsListItem;","import React, { Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { fetchStarships } from '../../actions';\r\nimport { withStarwarService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport StarshipsListItem from '../starships-list-item';\r\n\r\nimport Spinner from '../spinner';\r\n\r\nclass StarshipsList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStarships();\r\n    }\r\n\r\n    render() {\r\n        const {starshipsItem, loading} = this.props;\r\n        if(loading) {\r\n            return (\r\n                <Spinner />\r\n            )\r\n        } else {\r\n            return (\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        starshipsItem.map((item, idx) => {\r\n                            return (\r\n                                <StarshipsListItem \r\n                                    item = {item}\r\n                                    idx = {idx}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({starshipsItem, loading}) => {\r\n    return {\r\n        starshipsItem,\r\n        loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ((dispatch, {starwarService}) => {\r\n    return {\r\n        fetchStarships: fetchStarships(starwarService, dispatch)\r\n    }\r\n})\r\n\r\nexport default compose(withStarwarService(),connect(mapStateToProps, mapDispatchToProps))(StarshipsList);","import StarshipsList from './starships-list';\r\n\r\nexport default StarshipsList;","import ActiveItem from './active-item';\r\n\r\nexport default  ActiveItem;","import React from 'react'\r\n\r\nimport FilmsList from '../films-list';\r\nimport SpeciesList from '../species-list';\r\nimport StarshipsList from '../starships-list';\r\n\r\nconst ActiveItem = ({itemId}) => {\r\n\r\n\r\n    switch (itemId) {\r\n        case 'films':\r\n            return <FilmsList />\r\n        case 'starships':\r\n            return <StarshipsList />\r\n        case 'species':\r\n            return <SpeciesList />\r\n        default:\r\n            return false\r\n\r\n    }\r\n}\r\n \r\nexport default ActiveItem;","import React from 'react'\r\n\r\n// import { withStarwarService } from '../hoc';\r\n// import { compose } from '../../utils';\r\n\r\nimport ActiveList from '../active-list';\r\nimport ActiveItem from '../active-item';\r\n\r\nimport {Link, Route} from 'react-router-dom';\r\n\r\nconst HerodetailsPage = ({match}) => {\r\n    return ( \r\n        <div className=\"container-fluid flex-grow-1 page\">\r\n            <div className=\"container default-page\">\r\n                \r\n        \r\n                <ActiveList />\r\n                    \r\n                <div className=\"btn-group\" role=\"group\">\r\n                        <Link className = \"btn btn-secondary\" to={`${match.url}/films`}>Films</Link>\r\n                        <Link className = \"btn btn-secondary\" to={`${match.url}/starships`}>Starships</Link>\r\n                        <Link className = \"btn btn-secondary\" to={`${match.url}/species`}>Species</Link>\r\n                </div>\r\n                <Route \r\n                    path={`${match.url}/:id`}\r\n                    render = {({match}) => {\r\n                        const { id } = match.params;\r\n                        return <ActiveItem itemId = {id}/>\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>  \r\n    );\r\n   \r\n}\r\n\r\nexport default HerodetailsPage;","import PeopleListItem from './people-list-item';\r\n\r\nexport default PeopleListItem;","import React from 'react'\r\n\r\nimport './people-list-item.css';\r\n\r\n\r\nconst PeopleListItem = ({item}) => {\r\n    const { name, gender } = item;\r\n    return ( \r\n      <>\r\n        <i className={`fa fa-${gender} fa-cog`} aria-hidden=\"true\"></i>\r\n        <span className=\"people-list-item_name\" >{name}</span>\r\n      </>\r\n    );\r\n}\r\n \r\nexport default PeopleListItem;","import React, { Component } from 'react'\r\nimport PeopleListItem from '../people-list-item';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchPeople, onItemSelected, onIncreaseCount} from '../../actions';\r\nimport { withStarwarService } from '../hoc';\r\nimport { compose } from '../../utils';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Spinner from '../spinner';\r\n\r\nimport './people-list.css';\r\n\r\nconst PeopleList = ({onItemSelected, filteredProducts, onIncreaseCount, loading}) => {\r\n\r\n    if(loading) {\r\n        return (\r\n            <Spinner />\r\n        )\r\n    } else {\r\n        return ( \r\n            <div className=\"\">\r\n                <ul className=\"people-list list-group\">\r\n                    {\r\n                        filteredProducts && filteredProducts.map((item, idx) => {\r\n                            return (\r\n                                <Link to = \"/details\" onClick = {() => onItemSelected(item.id)} className=\"list-group-item\" key = {idx} >\r\n                                    <PeopleListItem \r\n                                        item = {item}\r\n                                    />\r\n                                </Link>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className=\"pagination\">\r\n                    <button className=\"btn btn-secondary\" onClick = {() => onIncreaseCount()}>More people</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass PeopleListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPeople();\r\n    }\r\n  \r\n    render() {\r\n      const { onItemSelected, onIncreaseCount, filteredProducts, loading } = this.props;\r\n  \r\n      return <PeopleList onItemSelected = {onItemSelected} onIncreaseCount = {onIncreaseCount} filteredProducts = {filteredProducts} loading = {loading}/>;\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({filteredProducts, loading }) => {\r\n    return { filteredProducts, loading };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { starwarService }) => {\r\n\r\n    return {\r\n      fetchPeople: fetchPeople(starwarService, dispatch),\r\n      onItemSelected: (id) => dispatch(onItemSelected(id)),\r\n      onIncreaseCount: () => dispatch(onIncreaseCount())\r\n    };\r\n};\r\n \r\nexport default compose(withStarwarService(),connect(mapStateToProps, mapDispatchToProps))(PeopleListContainer);","import PeopleList from './people-list';\r\n\r\nexport default PeopleList;","import React, { Component } from 'react'\r\n\r\nimport {connect} from 'react-redux';\r\nimport {onInputChange} from '../../actions';\r\n\r\nclass FilterItem extends Component {\r\n    \r\n    render() {\r\n        const {onInputChange} = this.props;\r\n        return (\r\n            <div className=\"d-flex flex-grow-1\">\r\n                <input className=\"flex-grow-1 searchField\" onChange = {(e) => onInputChange(e.target.value)} type=\"text\" placeholder=\"Try to search any hero...\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onInputChange: (value) => dispatch(onInputChange(value))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(FilterItem);","import FilterItem from './filter-item';\r\n\r\nexport default FilterItem;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport PeopleList from '../people-list';\r\nimport FilterItem from '../filter-item';\r\n\r\nimport './page.css';\r\n\r\nclass PeoplePage extends Component {\r\n    render() {\r\n\r\n       \r\n        return (\r\n            <div className=\"container-fluid flex-grow-1 page\">\r\n                <div className=\"container default-page\">\r\n                    <FilterItem />\r\n                    <PeopleList />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({loading}) => {\r\n    return {\r\n        loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PeoplePage);\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/starwar-bg.79db3e4a.jpg\";","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport Header from '../header';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {FavoritePage, PeoplePage, HeroDetails} from '../pages';\r\n\r\nimport './app.css';\r\nimport starwarBg from '../../images/starwar-bg.jpg';\r\n\r\nconst App = () => {\r\n    return ( \r\n        <main role=\"main\" className=\"starwars-app\">\r\n            <Header/>\r\n            <Switch>\r\n                <Route \r\n                    path=\"/starwar/\" \r\n                    render={() => <img className=\"flex-grow-1\" src = {starwarBg} alt=\"starwar-background\"/>} \r\n                />\r\n                <Route \r\n                    path=\"/favorites/\"\r\n                    component = {FavoritePage}\r\n                />\r\n\r\n                <Route \r\n                    path=\"/peoples/\"\r\n                    component = {PeoplePage}\r\n                />\r\n\r\n                <Route \r\n                    path=\"/details/\"\r\n                    component = {HeroDetails}\r\n                />\r\n               \r\n            </Switch>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default App;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Error!</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","const initialState = {\r\n    people: [],\r\n    loading: false,\r\n    error: null,\r\n    selectedItem: [],\r\n    filmsItem: [],\r\n    filmsItemId: [],\r\n    starshipsItem: [],\r\n    starshipsItemId: [],\r\n    speciesItem: [],\r\n    speciesItemId: [],\r\n    filteredProducts: [],\r\n    allPeople: [],\r\n    favoriteItems: []\r\n    \r\n};\r\n\r\nlet peopleCount = 10;\r\n\r\nconst reducer = (state = initialState , action) => {\r\n    console.log(action.type);\r\n    switch (action.type) {\r\n        case 'FETCH_PEOPLE_REQUEST':\r\n            return {\r\n                ...state,\r\n                people: [],\r\n                loading: true,\r\n                error: null,\r\n                \r\n            };\r\n\r\n        case 'FETCH_PEOPLE_SUCCESS':\r\n            const allPeople = action.payload;\r\n            const slicedPeople = allPeople.slice(0, peopleCount);\r\n            return {\r\n                ...state,\r\n                people: slicedPeople,\r\n                allPeople,\r\n                filteredProducts: slicedPeople,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_PEOPLE_FAILURE':\r\n            return {\r\n                ...state,\r\n                people: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        case 'FETCH_FILMS_REQUEST':\r\n            return {\r\n                ...state,\r\n                filmsItem: [],\r\n                loading: true,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_FILMS_SUCCESS':\r\n            const allFilms = action.payload;\r\n            const selectedFilms = state.filmsItemId.map((itemIdx) => {\r\n                return allFilms[itemIdx - 1]\r\n            })\r\n            \r\n            return {\r\n                ...state,\r\n                filmsItem: selectedFilms,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_FILMS_FAILURE':\r\n            return {\r\n                ...state,\r\n                filmsItem: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        \r\n        case 'FETCH_STARSHIPS_REQUEST':\r\n            return {\r\n                ...state,\r\n                starshipsItem: [],\r\n                loading: true,\r\n                error: null,\r\n                \r\n            };\r\n\r\n        case 'FETCH_STARSHIPS_SUCCESS':\r\n\r\n            const allStarships = action.payload;\r\n\r\n            const selectedStarships = allStarships.filter(item => state.starshipsItemId.indexOf(item.id) !== -1)\r\n            \r\n            return {\r\n                ...state,\r\n                starshipsItem: selectedStarships,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_STARSHIPS_FAILURE':\r\n            return {\r\n                ...state,\r\n                starshipsItem: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        case 'FETCH_SPECIES_REQUEST':\r\n            return {\r\n                ...state,\r\n                speciesItem: [],\r\n                loading: true,\r\n                error: null,\r\n                \r\n            };\r\n\r\n        case 'FETCH_SPECIES_SUCCESS':\r\n\r\n            const allSpecies= action.payload;\r\n            const selectedSpecies = state.allSpecies.map((itemIdx) => {\r\n                return allSpecies[itemIdx - 1]\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                speciesItem: selectedSpecies,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_SPECIES_FAILURE':\r\n            return {\r\n                ...state,\r\n                speciesItem: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        \r\n        case 'ON_ITEM_SELECTED':\r\n            const itemId = action.payload;\r\n            const item = state.people.find((item) => item.id === itemId);\r\n            const {films, starships, species} = item;\r\n            const idRegExp = /\\/([0-9]*)\\/$/;\r\n\r\n            const filmsItemId = films.map((item) => {\r\n                return item.match(idRegExp)[1];\r\n            })\r\n\r\n            const starshipsItemId = starships.map((item) => {\r\n                return item.match(idRegExp)[1];\r\n            })\r\n\r\n            const speciesItemId = species.map((item) => {\r\n                return item.match(idRegExp)[1];\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                selectedItem: item,\r\n                filmsItemId,\r\n                starshipsItemId,\r\n                speciesItemId\r\n            };\r\n\r\n        \r\n        case 'ON_INPUT_CHANGE':\r\n            const searchValue = action.payload;\r\n            let newState = Object.assign({}, state);\r\n            const {people} = state;\r\n            \r\n            let filteredValue = people.filter((item) => item.name.toLowerCase().includes(searchValue.toLowerCase()));\r\n            \r\n            if (searchValue !== '') {\r\n                newState.filteredProducts = filteredValue;\r\n            } else {\r\n                newState.filteredProducts = newState.people;\r\n            }\r\n            return newState;\r\n        \r\n        case 'ON_INCREASE_COUNT':\r\n            peopleCount += 10;\r\n            let newPeopleCount = Object.assign({}, state);\r\n            newPeopleCount.filteredProducts = state.allPeople.slice(0, peopleCount);\r\n            newPeopleCount.people = newPeopleCount.filteredProducts;\r\n            return newPeopleCount;\r\n\r\n        case 'ON_ADD_TO_FAVORITE':\r\n            const {favoriteItems, selectedItem} = state;\r\n            const addItemIndex = favoriteItems.findIndex(({id}) => id === selectedItem.id);\r\n            \r\n            if(addItemIndex < 0) {\r\n                return {\r\n                    ...state,\r\n                    favoriteItems: [\r\n                        ...favoriteItems,\r\n                        selectedItem\r\n                    ]\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    favoriteItems: [\r\n                        ...favoriteItems.slice(0, addItemIndex),\r\n                        selectedItem,\r\n                        ...favoriteItems.slice(addItemIndex + 1),\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'ON_REMOVE_FROM_FAVORITE':\r\n            const removeItemIndex = state.favoriteItems.findIndex(({id}) => id === state.selectedItem.id);\r\n            \r\n            if(removeItemIndex < 0) {\r\n                return {\r\n                    ...state,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    favoriteItems: [\r\n                        ...state.favoriteItems.slice(0, removeItemIndex),\r\n                        ...state.favoriteItems.slice(removeItemIndex + 1)\r\n                    ]\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\n\r\nconst saveToLocalStorage = (state) => {\r\n    try {\r\n      const serialisedState = JSON.stringify(state);\r\n      localStorage.setItem(\"persistantState\", serialisedState);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n}\r\n\r\nconst loadFromLocalStorage = () => {\r\n    try {\r\n      const serialisedState = localStorage.getItem(\"persistantState\");\r\n      if (serialisedState === null) return undefined;\r\n      return JSON.parse(serialisedState);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return undefined;\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n  reducer, \r\n  loadFromLocalStorage(),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport StarwarService from './services/starwar-service';\nimport { StarwarServiceProvider } from './components/starwar-service-context';\n\nimport store from './store';\n\nconst starwarService = new StarwarService();\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <ErrorBoundry>\n        <StarwarServiceProvider value={starwarService}>\n          <Router>\n            <App />\n          </Router>\n        </StarwarServiceProvider>\n      </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n  );\n\n","\r\nexport default class StarwarService {\r\n    \r\n    _apiBase = 'https://swapi.dev/api';\r\n    \r\n    _extractId = (item) => {\r\n      const idRegExp = /\\/([0-9]*)\\/$/;\r\n      return item.url.match(idRegExp)[1];\r\n    };\r\n\r\n    _transformPerson = (people) => {\r\n      return {\r\n        ...people,\r\n        id: this._extractId(people)\r\n      }\r\n    }\r\n\r\n    _transformStarship= (starship) => {\r\n      return {\r\n        ...starship,\r\n        id: this._extractId(starship)\r\n      }\r\n    }\r\n\r\n    getResource = async (urls) => {\r\n      const results = [];\r\n      let url = (`${this._apiBase}${urls}`);\r\n      \r\n      do {\r\n          const res = await fetch(url);\r\n          const data = await res.json();\r\n          url = data.next;\r\n          results.push(...data.results);\r\n      } while ( url );\r\n\r\n      return results;\r\n    };\r\n\r\n    getAllPeople = async () => {\r\n      const res = await this.getResource(`/people/`);\r\n      return res\r\n      .map(this._transformPerson)\r\n    };\r\n\r\n    getAllPeopleData = async () => {\r\n      const people = this.getAllPeople();\r\n      return new Promise((resolve) => {\r\n        resolve(people);\r\n      });\r\n      \r\n    };\r\n\r\n    getAllFilms = async () => {\r\n      const res = await this.getResource(`/films/`);\r\n      return res\r\n    };\r\n\r\n    getAllFilmsData = async () => {\r\n      const films = this.getAllFilms();\r\n      return new Promise((resolve) => {\r\n        resolve(films);\r\n      });\r\n      \r\n    };\r\n\r\n    getAllStarships = async () => {\r\n      const res = await this.getResource(`/starships/`);\r\n      return res\r\n        .map(this._transformStarship)\r\n    };\r\n\r\n    getAllStarshipsData = async () => {\r\n      const starships = this.getAllStarships();\r\n      return new Promise((resolve) => {\r\n        resolve(starships)\r\n      })\r\n    };\r\n\r\n\r\n    getAllSpecies = async () => {\r\n      const res = await this.getResource(`/species/`);\r\n      return res\r\n    };\r\n\r\n    getAllSpeciesData = async () => {\r\n      const species = this.getAllSpecies();\r\n      return new Promise((resolve) => {\r\n        resolve(species)\r\n      })\r\n    };\r\n  }"],"sourceRoot":""}